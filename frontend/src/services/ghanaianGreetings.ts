/**
 * Ghanaian/Twi Greeting System
 * Provides culturally relevant greetings based on time of day and context
 */

export interface Greeting {
  twi: string;
  ahanta?: string;
  english: string;
  emoji: string;
}

export interface WelcomeMessage {
  greeting: Greeting;
  message: string;
  timeOfDay: 'morning' | 'afternoon' | 'evening' | 'night';
}

/**
 * Time-based Twi & Ahanta greetings with English translations
 */
const greetings = {
  morning: [
    { twi: 'Maakye', ahanta: '∆Ükyre', english: 'Good morning', emoji: 'üåÖ' },
    { twi: 'Mema wo akye', ahanta: 'Ndze wo akyer', english: 'I greet you this morning', emoji: '‚òÄÔ∏è' },
    { twi: '∆ête s…õn? Maakye', ahanta: 'Edziban? ∆Ükyre', english: 'How is it? Good morning', emoji: 'üåÑ' },
  ],
  afternoon: [
    { twi: 'Maaha', ahanta: 'Ndze…õ…õ', english: 'Good afternoon', emoji: '‚òÄÔ∏è' },
    { twi: 'Mema wo aha', ahanta: 'Ndze wo ndz…õ', english: 'I greet you this afternoon', emoji: 'üåû' },
    { twi: '∆ête s…õn? Maaha', ahanta: 'Edziban? Ndze…õ…õ', english: 'How is it? Good afternoon', emoji: '‚òÄÔ∏è' },
  ],
  evening: [
    { twi: 'Maadwo', ahanta: 'M…õndzidwo', english: 'Good evening', emoji: 'üåÜ' },
    { twi: 'Mema wo adwo', ahanta: 'Ndze wo ndzidwo', english: 'I greet you this evening', emoji: 'üåá' },
    { twi: '∆ête s…õn? Maadwo', ahanta: 'Edziban? M…õndzidwo', english: 'How is it? Good evening', emoji: 'üåÉ' },
  ],
  night: [
    { twi: 'Da yie', ahanta: 'Da …îk…îl…î', english: 'Good night / Sleep well', emoji: 'üåô' },
    { twi: 'Me kra wo da yie', ahanta: 'Medze wo da …îk…îl…î', english: 'I wish you goodnight', emoji: '‚ú®' },
    { twi: '∆Üd…õ…õfo da yie', ahanta: '∆Üd…îfo da …îk…îl…î', english: 'Beloved one, sleep well', emoji: 'üåü' },
  ],
};

/**
 * Welcome messages in Twi for different contexts
 */
const welcomeMessages = {
  general: [
    'Akwaaba! Y…õn ani agye s…õ woaba',  // Welcome! We are happy you came
    'Woaba nti y…õn ani agye',  // We are happy because you came
    'Y…õma wo akwaaba',  // We welcome you
    'Y…õn koma mu agye akwaaba',  // You are heartily welcomed
  ],
  returning: [
    'Y…õn ani agye s…õ woaba bio',  // We are happy you came again
    'Woasan aba, y…õda wo ase',  // You returned, we thank you
    'Akwaaba bio!',  // Welcome again!
    'Woaba bio! Y…õn ani agye',  // You came again! We are happy
  ],
  work: [
    '∆ênn…õ nso, y…õnk…î adwuma!',  // Today too, let's go to work!
    '∆Übra pa!',  // Good work!
    'Mema wo adwuma pa ho aho…îden',  // I give you strength for good work
    'Nyame nhyira wo adwuma',  // God bless your work
  ],
};

/**
 * Motivational phrases in Twi & Ahanta
 */
const motivationalPhrases = [
  { twi: 'Wob…õy…õ yie!', ahanta: 'Wo b…õy…õ k…îl…î!', english: 'You will do well!' },
  { twi: 'Hw…õ wo ho yie', ahanta: 'Bisa wo naano k…îl…î', english: 'Take care of yourself' },
  { twi: 'Nyame ne wo ho', ahanta: 'Nyamenle ne wo naano', english: 'God is with you' },
  { twi: 'K…î so!', ahanta: 'Ko…î ye!', english: 'Keep going!' },
  { twi: 'Di nkonim', ahanta: 'Bo kunyin', english: 'Be victorious' },
  { twi: '∆êb…õy…õ yie', ahanta: 'E b…õy…õ k…îl…î', english: 'It will be well' },
  { twi: 'Gye wo ho di', ahanta: 'Dwene wo naano', english: 'Believe in yourself' },
  { twi: 'Nya anigye', ahanta: 'Nya as…õmb…î', english: 'Have joy' },
];

/**
 * Role-specific greetings
 */
const roleGreetings: Record<string, string[]> = {
  manager: [
    'Wura, akwaaba!',  // Boss, welcome!
    'Sahene, y…õma wo akwaaba',  // Leader, we welcome you
    'Kannifo, da yie',  // Leader, good day
  ],
  ceo: [
    'Sahene, akwaaba!',  // Chief/Leader, welcome!
    'Wura k…õse…õ, y…õma wo akwaaba',  // Big boss, we welcome you
    'Otumfo…î, da yie',  // Powerful one, good day
  ],
  shop_keeper: [
    'Dwamaofo…î, akwaaba!',  // Trader/Seller, welcome!
    'Aguadifo…î, da yie',  // Businessperson, good day
    'Adwumay…õfo…î pa, akwaaba',  // Good worker, welcome
  ],
  repairer: [
    'Adwumay…õfo…î, akwaaba!',  // Worker, welcome!
    'Nsamannefo…î, da yie',  // Repairer/Fixer, good day
    'Nyansafo…î, y…õma wo akwaaba',  // Skilled one, we welcome you
  ],
  admin: [
    '∆Ühw…õfo…î, akwaaba!',  // Overseer, welcome!
    '∆Ükannifo…î, da yie',  // Administrator, good day
    'Systemni …îhw…õfo…î, akwaaba',  // System overseer, welcome
  ],
  super_admin: [
    '∆Ükannifo…î k…õse…õ, akwaaba!',  // Chief administrator, welcome!
    'Systemni wura, da yie',  // System boss, good day
    'Otumfo…î, y…õma wo akwaaba',  // Powerful one, we welcome you
  ],
};

/**
 * Get the current time of day
 */
export function getTimeOfDay(): 'morning' | 'afternoon' | 'evening' | 'night' {
  const hour = new Date().getHours();
  
  if (hour >= 5 && hour < 12) return 'morning';
  if (hour >= 12 && hour < 17) return 'afternoon';
  if (hour >= 17 && hour < 21) return 'evening';
  return 'night';
}

/**
 * Get a random item from an array
 */
function getRandomItem<T>(array: T[]): T {
  return array[Math.floor(Math.random() * array.length)];
}

/**
 * Get a time-appropriate greeting
 */
export function getTimeBasedGreeting(): Greeting {
  const timeOfDay = getTimeOfDay();
  return getRandomItem(greetings[timeOfDay]);
}

/**
 * Get a role-specific greeting in Twi
 */
export function getRoleGreeting(role: string): string {
  const roleKey = role.toLowerCase();
  if (roleGreetings[roleKey]) {
    return getRandomItem(roleGreetings[roleKey]);
  }
  return 'Akwaaba!';  // Default welcome
}

/**
 * Get a general welcome message in Twi
 */
export function getWelcomeMessage(context: 'general' | 'returning' | 'work' = 'general'): string {
  return getRandomItem(welcomeMessages[context]);
}

/**
 * Get a motivational phrase
 */
export function getMotivationalPhrase(): { twi: string; english: string } {
  return getRandomItem(motivationalPhrases);
}

/**
 * Generate a complete welcome message for dashboard
 */
export function generateDashboardWelcome(userName: string, userRole: string, isReturningUser: boolean = true): WelcomeMessage {
  const timeOfDay = getTimeOfDay();
  const greeting = getTimeBasedGreeting();
  
  let welcomeContext: 'general' | 'returning' | 'work' = isReturningUser ? 'returning' : 'general';
  
  // Add work context during business hours
  if (timeOfDay === 'morning' || timeOfDay === 'afternoon') {
    welcomeContext = 'work';
  }
  
  const roleGreeting = getRoleGreeting(userRole);
  const welcomeMsg = getWelcomeMessage(welcomeContext);
  const motivation = getMotivationalPhrase();
  
  // Construct personalized message
  const message = `${roleGreeting} ${userName}! ${welcomeMsg}. ${motivation.twi}`;
  
  return {
    greeting,
    message,
    timeOfDay,
    motivation,
    day_motivation: getDayMotivation(),
    business_phrase: getBusinessPhrase(userRole), // Pass role for dynamic tips
  };
}

/**
 * Generate a login success message
 */
export function generateLoginSuccessMessage(userName: string, userRole: string): {
  title: string;
  subtitle: string;
  emoji: string;
} {
  const greeting = getTimeBasedGreeting();
  const roleGreeting = getRoleGreeting(userRole);
  const welcomeMsg = getWelcomeMessage('general');
  
  return {
    title: `${greeting.twi}, ${userName}!`,
    subtitle: `${welcomeMsg} (${greeting.english})`,
    emoji: greeting.emoji,
  };
}

/**
 * Get day-specific motivational message
 */
export function getDayMotivation(): { twi: string; english: string } {
  const dayOfWeek = new Date().getDay();
  
  const dayMessages: Record<number, { twi: string; english: string }> = {
    0: { twi: 'Kwasida pa!', english: 'Happy Sunday!' },
    1: { twi: 'Dwowda pa! Y…õnfiri ase…õ yie', english: 'Happy Monday! Let\'s start well' },
    2: { twi: 'Benada pa! K…î so y…õ adwuma', english: 'Happy Tuesday! Keep working' },
    3: { twi: 'Wukuda pa! Y…õn adwuma rek…î so yie', english: 'Happy Wednesday! Our work is going well' },
    4: { twi: 'Yawda pa! Y…õreb…õn nnaaw…îtwe awiee…õ', english: 'Happy Thursday! We\'re nearing the weekend' },
    5: { twi: 'Fida pa! Nnaaw…îtwe yi aba n ºawiee…õ', english: 'Happy Friday! The week has come to an end' },
    6: { twi: 'Memeneda pa! Nya ahomegye…õ', english: 'Happy Saturday! Enjoy your rest' },
  };
  
  return dayMessages[dayOfWeek] || { twi: 'Da pa!', english: 'Good day!' };
}

/**
 * Store last login date to track returning users
 */
export function markUserLogin(userId: string | number): void {
  const key = `last_login_${userId}`;
  localStorage.setItem(key, new Date().toISOString());
}

/**
 * Check if user is a returning user (logged in before today)
 */
export function isReturningUser(userId: string | number): boolean {
  const key = `last_login_${userId}`;
  const lastLogin = localStorage.getItem(key);
  
  if (!lastLogin) return false;
  
  const lastLoginDate = new Date(lastLogin);
  const today = new Date();
  
  // Check if last login was on a different day
  return lastLoginDate.toDateString() !== today.toDateString();
}

/**
 * Role-based business tips (dynamic based on user privilege)
 */
const roleBasedTips = {
  shop_keeper: {
    morning: [
      { twi: 'Kyer…õ wo customers adwuma pa', english: 'Show your customers good service today' },
      { twi: 'Twer…õ wo aguade nyinaa', english: 'Record all your sales properly' },
      { twi: 'Hw…õ wo stock na sua nea aka', english: 'Check your stock and know what remains' },
    ],
    afternoon: [
      { twi: 'K…î so kyer…õ customers saa adwuma', english: 'Continue showing customers great service' },
      { twi: 'Monhw…õ aguade a woay…õ …õnn…õ', english: 'Review the sales you\'ve made today' },
      { twi: 'Twer…õ resale biara a …õw…î h…î', english: 'Record any resales available' },
    ],
    evening: [
      { twi: 'Kan wo aguade a woay…õ …õnn…õ', english: 'Count the sales you made today' },
      { twi: 'Y…õ balance na sua nea woanya', english: 'Do your balance and know your profit' },
      { twi: 'Siesie shop na k…î fie', english: 'Organize the shop and go home' },
    ],
    night: [
      { twi: 'Da yie, …îkyena y…õb…õt…în pii', english: 'Sleep well, tomorrow we\'ll sell more' },
      { twi: 'Menya nhy…õso …õnn…õ ho', english: 'Plan for tomorrow' },
    ],
  },
  manager: {
    morning: [
      { twi: 'Hw…õ wo adwumay…õfo…î s…õ w…îrey…õ adwuma', english: 'Monitor your staff to ensure they\'re working' },
      { twi: 'Hw…õ reports nyinaa …õnn…õ', english: 'Check all reports today' },
      { twi: 'Y…õ nkontoaho a …õho hia', english: 'Make necessary calculations' },
    ],
    afternoon: [
      { twi: 'Sua s…õnea aguade rek…î so', english: 'Monitor how business is progressing' },
      { twi: 'Boa wo staff s…õ wohia', english: 'Help your staff if needed' },
      { twi: 'Check stock levels p…õp…õ…õp…õ', english: 'Check stock levels carefully' },
    ],
    evening: [
      { twi: 'Review …õnn…õ wiase', english: 'Review today\'s business' },
      { twi: 'Sua wo profit margins', english: 'Know your profit margins' },
      { twi: 'Plan …îkyena adwuma', english: 'Plan tomorrow\'s work' },
    ],
    night: [
      { twi: 'Hw…õ final reports na k…î fie', english: 'Check final reports and go home' },
    ],
  },
  ceo: {
    morning: [
      { twi: 'Hw…õ wo business statistics', english: 'Check your business statistics' },
      { twi: 'Sua profit trends …õnn…õ', english: 'Know profit trends today' },
      { twi: 'Monitor all departments', english: 'Monitor all departments' },
    ],
    afternoon: [
      { twi: 'Review aguade nyinaa', english: 'Review all business operations' },
      { twi: 'Sua sika a …õw…î system mu', english: 'Know money in the system' },
    ],
    evening: [
      { twi: 'Check daily performance', english: 'Check daily performance' },
      { twi: 'Sua nea …õk…î yie ne nea …õny…õ yie', english: 'Know what went well and what didn\'t' },
    ],
    night: [
      { twi: 'Plan business strategies', english: 'Plan business strategies' },
    ],
  },
  repairer: {
    morning: [
      { twi: 'Hw…õ repairs a aka', english: 'Check pending repairs' },
      { twi: 'Y…õ repairs p…õp…õ…õp…õ', english: 'Do repairs carefully' },
      { twi: 'Kyer…õ customers s…õ repairs b…õba', english: 'Inform customers when repairs will be ready' },
    ],
    afternoon: [
      { twi: 'K…î so y…õ repairs', english: 'Continue doing repairs' },
      { twi: 'Twer…õ parts a wode di dwuma', english: 'Record parts you use' },
    ],
    evening: [
      { twi: 'Kan repairs a woay…õ …õnn…õ', english: 'Count repairs you completed today' },
      { twi: 'Fr…õ customers ma w…înb…õgye', english: 'Call customers to come collect' },
    ],
    night: [
      { twi: 'Plan …îkyena repairs', english: 'Plan tomorrow\'s repairs' },
    ],
  },
  admin: {
    morning: [
      { twi: 'Hw…õ system status', english: 'Check system status' },
      { twi: 'Monitor all users', english: 'Monitor all users' },
    ],
    afternoon: [
      { twi: 'Sua s…õnea system rek…î so', english: 'Know how system is performing' },
    ],
    evening: [
      { twi: 'Check activity logs', english: 'Check activity logs' },
    ],
    night: [
      { twi: 'System maintenance b…õy…õ', english: 'Do system maintenance' },
    ],
  },
  super_admin: {
    morning: [
      { twi: 'Monitor platform nyinaa', english: 'Monitor entire platform' },
    ],
    afternoon: [
      { twi: 'Sua all companies performance', english: 'Know all companies performance' },
    ],
    evening: [
      { twi: 'Review platform analytics', english: 'Review platform analytics' },
    ],
    night: [
      { twi: 'Plan platform updates', english: 'Plan platform updates' },
    ],
  },
};

/**
 * Get dynamic business phrase based on role and time
 */
export function getBusinessPhrase(userRole?: string): { twi: string; english: string } {
  const timeOfDay = getTimeOfDay();
  
  // Get role-specific tips if role is provided
  if (userRole) {
    const roleKey = userRole.toLowerCase() as keyof typeof roleBasedTips;
    if (roleBasedTips[roleKey] && roleBasedTips[roleKey][timeOfDay]) {
      return getRandomItem(roleBasedTips[roleKey][timeOfDay]);
    }
  }
  
  // Fallback to general phrases if role not found
  const generalPhrases = {
    morning: [
      { twi: '∆ênn…õ b…õy…õ da pa!', english: 'Today will be a good day!' },
      { twi: 'Y…õn aguade b…õk…î yie …õnn…õ', english: 'Our business will go well today' },
    ],
    afternoon: [
      { twi: 'Y…õn adwuma rek…î so yie', english: 'Our work is going well' },
      { twi: 'Y…õnk…î so', english: 'Let\'s continue' },
    ],
    evening: [
      { twi: 'Y…õay…õ adwuma pa …õnn…õ', english: 'We\'ve done good work today' },
      { twi: 'Y…õda Nyame ase', english: 'We thank God' },
    ],
    night: [
      { twi: 'Y…õn wiase y…õ', english: 'We are done' },
      { twi: 'K…î fie na k…îhome', english: 'Go home and rest' },
    ],
  };
  
  return getRandomItem(generalPhrases[timeOfDay]);
}

